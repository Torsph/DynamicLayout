// Generated by Apple Swift version 2.2 (swiftlang-703.0.18.1 clang-703.0.29)
#pragma clang diagnostic push

#if defined(__has_include) && __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <objc/NSObject.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if defined(__has_include) && __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus) || __cplusplus < 201103L
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif

#if defined(__has_attribute) && __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if defined(__has_attribute) && __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if defined(__has_attribute) && __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if defined(__has_attribute) && __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name) enum _name : _type _name; enum SWIFT_ENUM_EXTRA _name : _type
# if defined(__has_feature) && __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME) SWIFT_ENUM(_type, _name)
# endif
#endif
#if defined(__has_feature) && __has_feature(modules)
@import ObjectiveC;
@import CoreGraphics;
@import UIKit;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
@class UICollectionView;
@class UIView;
@class CollectionAdapter;
@class UICollectionViewFlowLayout;

SWIFT_CLASS("_TtC5Spots12CarouselSpot")
@interface CarouselSpot : NSObject
+ (void (^ _Nullable)(UICollectionView * _Nonnull))configure;
+ (void)setConfigure:(void (^ _Nullable)(UICollectionView * _Nonnull))value;
+ (SWIFT_METATYPE(UIView) _Nonnull)defaultView;
+ (void)setDefaultView:(SWIFT_METATYPE(UIView) _Nonnull)value;
+ (NSString * _Nonnull)defaultKind;
+ (void)setDefaultKind:(NSString * _Nonnull)value;
@property (nonatomic) NSInteger index;
@property (nonatomic) BOOL paginate;
@property (nonatomic, strong) CollectionAdapter * _Nonnull adapter;
@property (nonatomic, strong) UICollectionViewFlowLayout * _Nonnull layout;
@property (nonatomic, strong) UICollectionView * _Nonnull collectionView;
- (void)setup:(CGSize)size;
@end

@class NSIndexPath;

@interface CarouselSpot (SWIFT_EXTENSION(Spots))
- (CGSize)sizeForItemAt:(NSIndexPath * _Nonnull)indexPath;
@end

@class UIScrollView;

@interface CarouselSpot (SWIFT_EXTENSION(Spots)) <UIScrollViewDelegate>
- (void)scrollViewWillEndDragging:(UIScrollView * _Nonnull)scrollView withVelocity:(CGPoint)velocity targetContentOffset:(CGPoint * _Null_unspecified)targetContentOffset;
@end


SWIFT_CLASS("_TtC5Spots17CollectionAdapter")
@interface CollectionAdapter : NSObject
@end

@class UICollectionViewCell;

@interface CollectionAdapter (SWIFT_EXTENSION(Spots)) <UICollectionViewDataSource>
- (NSInteger)collectionView:(UICollectionView * _Nonnull)collectionView numberOfItemsInSection:(NSInteger)section;
- (UICollectionViewCell * _Nonnull)collectionView:(UICollectionView * _Nonnull)collectionView cellForItemAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
@end

@class UICollectionViewLayout;

@interface CollectionAdapter (SWIFT_EXTENSION(Spots)) <UICollectionViewDelegate, UIScrollViewDelegate>
- (CGSize)collectionView:(UICollectionView * _Nonnull)collectionView layout:(UICollectionViewLayout * _Nonnull)collectionViewLayout sizeForItemAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
- (void)collectionView:(UICollectionView * _Nonnull)collectionView didSelectItemAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
@end


SWIFT_CLASS("_TtC5Spots8GridSpot")
@interface GridSpot : NSObject
+ (SWIFT_METATYPE(UIView) _Nonnull)defaultView;
+ (void)setDefaultView:(SWIFT_METATYPE(UIView) _Nonnull)value;
+ (NSString * _Nonnull)defaultKind;
+ (void)setDefaultKind:(NSString * _Nonnull)value;
+ (void (^ _Nullable)(UICollectionView * _Nonnull))configure;
+ (void)setConfigure:(void (^ _Nullable)(UICollectionView * _Nonnull))value;
@property (nonatomic) NSInteger index;
@property (nonatomic, strong) CollectionAdapter * _Nonnull adapter;
@property (nonatomic, strong) UICollectionViewFlowLayout * _Nonnull layout;
@property (nonatomic, strong) UICollectionView * _Nonnull collectionView;
- (nonnull instancetype)initWithTitle:(NSString * _Nonnull)title kind:(NSString * _Nullable)kind;
@end


SWIFT_CLASS("_TtC5Spots11ListAdapter")
@interface ListAdapter : NSObject
@end

@class UITableView;
@class UITableViewCell;

@interface ListAdapter (SWIFT_EXTENSION(Spots)) <UITableViewDataSource>
- (NSInteger)tableView:(UITableView * _Nonnull)tableView numberOfRowsInSection:(NSInteger)section;
- (UITableViewCell * _Nonnull)tableView:(UITableView * _Nonnull)tableView cellForRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
@end


@interface ListAdapter (SWIFT_EXTENSION(Spots)) <UITableViewDelegate, UIScrollViewDelegate>
- (CGFloat)tableView:(UITableView * _Nonnull)tableView heightForHeaderInSection:(NSInteger)section;
- (NSString * _Nullable)tableView:(UITableView * _Nonnull)tableView titleForHeaderInSection:(NSInteger)section;
- (void)tableView:(UITableView * _Nonnull)tableView didSelectRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
- (UIView * _Nullable)tableView:(UITableView * _Nonnull)tableView viewForHeaderInSection:(NSInteger)section;
- (CGFloat)tableView:(UITableView * _Nonnull)tableView heightForRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
@end


SWIFT_CLASS("_TtC5Spots8ListSpot")
@interface ListSpot : NSObject
+ (void (^ _Nullable)(UITableView * _Nonnull))configure;
+ (void)setConfigure:(void (^ _Nullable)(UITableView * _Nonnull))value;
+ (SWIFT_METATYPE(UIView) _Nonnull)defaultView;
+ (void)setDefaultView:(SWIFT_METATYPE(UIView) _Nonnull)value;
+ (NSString * _Nonnull)defaultKind;
+ (void)setDefaultKind:(NSString * _Nonnull)value;
@property (nonatomic) NSInteger index;
@property (nonatomic, strong) ListAdapter * _Nonnull adapter;
@property (nonatomic, strong) UITableView * _Nonnull tableView;
- (nonnull instancetype)initWithTableView:(UITableView * _Nullable)tableView title:(NSString * _Nonnull)title kind:(NSString * _Nullable)kind;
- (void)setup:(CGSize)size;
@end

@class NSCoder;

SWIFT_CLASS("_TtC5Spots12ListSpotCell")
@interface ListSpotCell : UITableViewCell
@property (nonatomic) CGSize size;
- (nonnull instancetype)initWithStyle:(UITableViewCellStyle)style reuseIdentifier:(NSString * _Null_unspecified)reuseIdentifier OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC5Spots16SpotsContentView")
@interface SpotsContentView : UIView
- (void)didAddSubview:(UIView * _Nonnull)subview;
- (void)willRemoveSubview:(UIView * _Nonnull)subview;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end

@class SpotsScrollView;
@class UIRefreshControl;
@protocol UIViewControllerTransitionCoordinator;

SWIFT_CLASS("_TtC5Spots15SpotsController")
@interface SpotsController : UIViewController <UIScrollViewDelegate>
+ (void (^ _Nullable)(SpotsScrollView * _Nonnull))configure;
+ (void)setConfigure:(void (^ _Nullable)(SpotsScrollView * _Nonnull))value;
@property (nonatomic, readonly) UIEdgeInsets initialContentInset;
@property (nonatomic, copy) NSArray<NSNumber *> * _Nonnull refreshPositions;
@property (nonatomic) BOOL refreshing;
@property (nonatomic, strong) SpotsScrollView * _Nonnull spotsScrollView;
@property (nonatomic, strong) UIRefreshControl * _Nonnull refreshControl;

/// \param json A JSON dictionary that gets parsed into UI elements
- (nonnull instancetype)init:(NSDictionary<NSString *, id> * _Nonnull)json;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)viewDidLoad;
- (void)viewWillAppear:(BOOL)animated;
- (void)viewWillTransitionToSize:(CGSize)size withTransitionCoordinator:(id <UIViewControllerTransitionCoordinator> _Nonnull)coordinator;
@end


@interface SpotsController (SWIFT_EXTENSION(Spots))
- (void)scrollViewDidScroll:(UIScrollView * _Nonnull)scrollView;
@end


@interface SpotsController (SWIFT_EXTENSION(Spots))
@end


@interface SpotsController (SWIFT_EXTENSION(Spots))

/// \param completion A closure that will be run after reload has been performed on all spots
- (void)reload:(void (^ _Nullable)(void))completion;

/// \param indexes An integer array of indexes that you want to update
///
/// \param spotIndex The index of the spot that you want to update into
///
/// \param closure A completion closure that will run after the spot has performed updates internally
- (void)updateWithIndexes:(NSArray<NSNumber *> * _Nonnull)indexes spotIndex:(NSInteger)spotIndex completion:(void (^ _Nullable)(void))completion;

/// \param index The index of the view model that you want to remove
///
/// \param spotIndex The index of the spot that you want to remove into
///
/// \param closure A completion closure that will run after the spot has performed updates internally
- (void)delete:(NSInteger)index spotIndex:(NSInteger)spotIndex completion:(void (^ _Nullable)(void))completion;

/// \param indexes A collection of indexes for view models that you want to remove
///
/// \param spotIndex The index of the spot that you want to remove into
///
/// \param closure A completion closure that will run after the spot has performed updates internally
- (void)deleteWithIndexes:(NSArray<NSNumber *> * _Nonnull)indexes spotIndex:(NSInteger)spotIndex completion:(void (^ _Nullable)(void))completion;
- (void)refreshSpots:(UIRefreshControl * _Nonnull)refreshControl;

/// \param animated A boolean value to determine if you want to perform the scrolling with or without animation
- (void)scrollToBottom:(BOOL)animated;
@end


SWIFT_CLASS("_TtC5Spots15SpotsScrollView")
@interface SpotsScrollView : UIScrollView
@property (nonatomic) BOOL configured;
@property (nonatomic) BOOL forceUpdate;
@property (nonatomic) UIEdgeInsets contentInset;
@property (nonatomic, strong) SpotsContentView * _Nonnull contentView;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)willRemoveSubview:(UIView * _Nonnull)subview;
- (void)observeValueForKeyPath:(NSString * _Nullable)keyPath ofObject:(id _Nullable)object change:(NSDictionary<NSString *, id> * _Nullable)change context:(void * _Null_unspecified)context;
- (void)layoutSubviews;
@end


SWIFT_CLASS("_TtC5Spots8ViewSpot")
@interface ViewSpot : NSObject
+ (void (^ _Nullable)(UICollectionView * _Nonnull))configure;
+ (void)setConfigure:(void (^ _Nullable)(UICollectionView * _Nonnull))value;
+ (SWIFT_METATYPE(UIView) _Nonnull)defaultView;
+ (void)setDefaultView:(SWIFT_METATYPE(UIView) _Nonnull)value;
+ (NSString * _Nonnull)defaultKind;
+ (void)setDefaultKind:(NSString * _Nonnull)value;
@property (nonatomic) NSInteger index;
@property (nonatomic, strong) UIScrollView * _Nonnull scrollView;
- (nonnull instancetype)initWithTitle:(NSString * _Nonnull)title kind:(NSString * _Nullable)kind;
@end

#pragma clang diagnostic pop
